browseVignettes("VariantAnnotation")
fl <- system.file("extdata", "variants.vcf", package="VariantAnnotation")
fl <- system.file("extdata", "variants.vcf", package="VariantAnnotation")
help(readVcf)
library(VariantAnnotation)
library(dplyr)
library(pryr)
ft <- readInfo("variants.vcf", "NS", row.names = FALSE)
setwd("~/R")
ft <- readInfo("variants.vcf", "NS", row.names = FALSE)
custom <- ft %>% mean()
start_time <- Sys.time()
sum <- 0
means <- c()
for (i in 1:40) {
means[i] <- mem_change(custom)
sum <- sum + means[i]
}
run_time <- (Sys.time() - start_time)
sprintf("the average memory from 1000 tests equals: %f\n\n
the total run time of collecting this average was: %s", (sum / 1000), run_time)
test_count <- 40
sprintf("the average memory from %i tests equals: %f\n" +
"the total run time of collecting this average was: %s", test_count, (sum / 1000), run_time)
sprintf("the average memory from %i tests equals: %f\n",
"the total run time of collecting this average was: %s", test_count, (sum / 1000), run_time)
class(test_count)
sprintf("the average memory from %i tests equals: %f\n
the total run time of collecting this average was: %s", test_count, (sum / 1000), run_time)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s", test_count, (sum / 1000), run_time)
start_time <- Sys.time()
test_count <- 10
sum <- 0
means <- c()
for (i in 1:test_count) {
means[i] <- mem_change(custom)
sum <- sum + means[i]
}
run_time <- (Sys.time() - start_time)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s", test_count, (sum / 1000), run_time)
start_time <- Sys.time()
test_count <- 10
sum <- 0
means <- c()
for (i in 1:test_count) {
means[i] <- mem_change(custom)
sum <- sum + means[i]
}
run_time <- (Sys.time() - start_time)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s", test_count, (sum / 1000), run_time)
start_time <- Sys.time()
test_count <- 10
sum <- 0
means <- c()
for (i in 1:test_count) {
##  means[i] <- mem_change(custom)
means[i] <- ft %>% mean()
sum <- sum + means[i]
}
run_time <- (Sys.time() - start_time)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s", test_count, (sum / 1000), run_time)
start_time <- Sys.time()
test_count <- 10
sum <- 0
means <- c()
for (i in 1:test_count) {
means[i] <- mem_change(custom)
##  means[i] <- mem_change(ft %>% mean())
sum <- sum + means[i]
}
run_time <- (Sys.time() - start_time)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s", test_count, (sum / test_count), run_time)
custom <- ft %>% mean()
res <- benchmark_std(10,)
custom <- ft %>% mean()
startTime <- Sys.time()
numberTrials <- 20
sum <- 0
means <- c()
for (i in 1:test_count) {
means[i] <- mem_change(custom)
##  means[i] <- mem_change(ft %>% mean())
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s", numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 20
sum <- 0
means <- c()
for (i in 1:numberTrials) {
means[i] <- mem_change(custom)
##  means[i] <- mem_change(ft %>% mean())
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s", numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 5
sum <- 0
means <- c()
for (i in 1:numberTrials) {
means[i] <- mem_change(custom)
##  means[i] <- mem_change(ft %>% mean())
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f\nthe total run time of collecting this average was: %s", numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 5
sum <- 0
means <- c()
for (i in 1:numberTrials) {
means[i] <- mem_change(custom)
##  means[i] <- mem_change(ft %>% mean())
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f \n the total run time of collecting this average was: %s", numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 40
sum <- 0
means <- c()
for (i in 1:numberTrials) {
means[i] <- mem_change(custom)
##  means[i] <- mem_change(ft %>% mean())
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f    the total run time of collecting this average was: %s", numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 40
sum <- 0
means <- c()
for (i in 1:numberTrials) {
means[i] <- mem_change(custom)
##  means[i] <- mem_change(ft %>% mean())
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s",
numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 10
sum <- 0
means <- c()
for (i in 1:numberTrials) {
means[i] <- mem_change(custom)
##  means[i] <- mem_change(ft %>% mean())
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s",
numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 100
sum <- 0
means <- c()
for (i in 1:numberTrials) {
means[i] <- mem_change(custom)
##  means[i] <- mem_change(ft %>% mean())
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s",
numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 10
sum <- 0
means <- c()
for (i in 1:numberTrials) {
##means[i] <- mem_change(custom)
means[i] <- mem_change(ft %>% mean())
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s",
numberTrials, (sum / numberTrials), runTime)
customPipeline <- ft %>% mean()
rm(custom)
rm(run_time)
rm(start_time)
rm(test_count)
startTime <- Sys.time()
numberTrials <- 100
sum <- 0
means <- c()
for (i in 1:numberTrials) {
##means[i] <- mem_change(custom)
means[i] <- mem_change(ft %>% mean())
print(means[i])
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s",
numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 10
sum <- 0
means <- c()
for (i in 1:numberTrials) {
##means[i] <- mem_change(custom)
means[i] <- mem_change(ft %>% mean())
print(means[i])
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s",
numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 10
sum <- 0
means <- c()
for (i in 1:numberTrials) {
##means[i] <- mem_change(custom)
means[i] <- mem_change(ft %>% mean())
print(means[i])
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s",
numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 10
sum <- 0
means <- c()
for (i in 1:numberTrials) {
##means[i] <- mem_change(custom)
means[i] <- mem_change(ft %>% mean())
print(means[i])
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s",
numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 10
sum <- 0
means <- c()
for (i in 1:numberTrials) {
##means[i] <- mem_change(custom)
means[i] <- mem_change(ft %>% mean())
print(means[i])
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s",
numberTrials, (sum / numberTrials), runTime)
startTime <- Sys.time()
numberTrials <- 1000
sum <- 0
means <- c()
for (i in 1:numberTrials) {
##means[i] <- mem_change(custom)
means[i] <- mem_change(ft %>% mean())
print(means[i])
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s",
numberTrials, (sum / numberTrials), runTime)
help(mem_change)
mem_change(ft %>% mean())
mem_change(ft %>% mean())
mem_change(ft %>% mean())
ft <- readInfo("variants.vcf", "AF", row.names = FALSE)
ft
startTime <- Sys.time()
numberTrials <- 15
sum <- 0
means <- c()
for (i in 1:numberTrials) {
##means[i] <- mem_change(custom)
means[i] <- mem_change(ft %>% mean())
mem_change(ft %>% mean())
print(means[i])
sum <- sum + means[i]
}
runTime <- (Sys.time() - startTime)
sprintf("the average memory from %i tests equals: %f
the total run time of collecting this average was: %s",
numberTrials, (sum / numberTrials), runTime)
help("readGT")
# HOW TO: load your own data from a VCF file
fl <- readVcf("variants.vcf")
fl
class(fl)
